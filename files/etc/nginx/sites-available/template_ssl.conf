<%def name="is_default_server()" filter="trim">
    % if vhost.get('default', False):
default_server
	% endif
</%def>

%for name,config in vhost.get('upstream', {}).items():
    upstream ${name} {
        ${";\n".join(config)};
    }
% endfor

server {
	listen 80 ${is_default_server()};
	listen [::]:80 ${is_default_server()};

	server_name ${vhost_name} ${' '.join(vhost.get('additional_server_names', {}))};

    % if vhost.get('letsencrypt', False):
        include /etc/nginx/snippets/letsencrypt.conf;
    % endif

	location / {
		return 301 https://${vhost_name}$request_uri;
	}
}

server {
	listen 443 ssl http2 ${is_default_server()};
	listen [::]:443 ssl http2 ${is_default_server()};

	server_name ${vhost_name};

	ssl_certificate /etc/nginx/ssl/${vhost_name}.crt;
	ssl_certificate_key /etc/nginx/ssl/${vhost_name}.key;

	access_log /var/log/nginx/${vhost_name}-access_log;
	error_log /var/log/nginx/${vhost_name}-error_log info;

    % if vhost.get('root', {}):
	    root ${vhost.get('root')};
	% else:
	    root /var/www/${vhost_name}/public_html;
	% endif

	index index.php index.html;

	% for path,config in vhost.get('location', {}).items():
	location ${path} {
	    % for line in config:
    	    ${line}
    	% endfor
	}
	% endfor

	# HIDDEN FILES
	location ~ ^(.*)\/\.(.*)$ {
		return 404;
	}
}

% if vhost.get('additional_server_names', {}):
    #E.g. we use without www., redirect to www.
    server {
	    listen 443 ssl;
    	listen [::]:443 ssl;

        server_name ${' '.join(vhost['additional_server_names'])};

    	ssl_certificate /etc/nginx/ssl/${vhost_name}.crt;
    	ssl_certificate_key /etc/nginx/ssl/${vhost_name}.key;

	    return 301 https://${vhost_name}$request_uri;
    }
% endif