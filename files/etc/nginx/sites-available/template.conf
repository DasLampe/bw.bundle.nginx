<%def name="is_default_server()" filter="trim">
    % if vhost.get('default', False):
 default_server
	% endif
</%def>
% for name,config in vhost.get('upstream', {}).items():
    upstream ${name} {
        ${";\n".join(config)};
    }
% endfor

server {
	listen 80 ${is_default_server()};
	listen [::]:80 ${is_default_server()};

    % if vhost.get('redirect_to_main_server_name', True):
	    server_name ${vhost_name};
	% else:
	    server_name ${vhost_name} ${' '.join(vhost.get('additional_server_names'))};
	% endif

    % if vhost.get('access_log', True):
        access_log ${vhost.get('access_log', {}).get('path', "/var/log/nginx/{}-access_log".format(vhost_name))} ${vhost.get('access_log', {}).get('format', 'main')};
	% endif
	error_log /var/log/nginx/${vhost_name}-error_log info;

    % for include in vhost.get('includes', []):
        include ${include};
    % endfor

    root ${vhost.get('root', '/var/www/{}/public_html'.format(vhost_name))};

    % for config in vhost.get('processed_additional_config', []):
        ${config}
    % endfor

	index index.php index.html;

	% for path,config in vhost.get('location', {}).items():
	location ${path} {
	    % for line in config:
    	    ${line}
    	% endfor
	}
	% endfor

	# HIDDEN FILES
	location ~ ^(.*)\/\.(.*)$ {
		return 404;
	}
}

% if vhost.get('additional_server_names', []) and vhost.get('redirect_to_main_server_name', True):
    #E.g. we use without www., redirect to www.
    server {
	    listen 80;
    	listen [::]:80;

        server_name ${' '.join(vhost.get('additional_server_names'))};

	    return 301 http://${vhost_name}$request_uri;
    }
% endif